不同于大多数题解使用hashset判断平方和是否重复出现的做法，我发现了一个规律：当平方和是一位数时，若此时的值等于1或7，则是快乐数，否则不是。
平方和等于1时直接就可以得到是快乐数的结论，等于7时，稍加推测就可知道7经过5次平方和计算，也会得到1.
然而其他一位数，不论经过多少次计算都不能得到1，并且会陷入相似的无限循环，在纸上稍加演算就可得知。
基于以上想法，结合递归解题，提交通过：
执行用时：0 ms, 在所有 Java 提交中击败了100.00%的用户
内存消耗：35.3 MB, 在所有 Java 提交中击败了80.67%的用户
