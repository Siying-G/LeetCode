刚开始想的是先排序nums数组，再用双指针从数组头和数组尾进行读取，提交发现该问题并不符合这样的规律，于是转换思路。
这是一道背包问题，计nums数组的所有元素和为sum，那么需要寻找哪些元素的和为target = sum/2。
相当于，总容量为target的背包，现有若干物品，每个物品的重量和价值对应nums数组的元素，求问可以放入哪些物品，使得物品总重不大于target，且物品价值达到最大化。
转换成如上背包问题后，即可用背包问题的求解方式，构建dp矩阵求解。LC0416_V1.java和LC0416_V2.java分别是使用二维dp矩阵和一维dp数组的代码。
